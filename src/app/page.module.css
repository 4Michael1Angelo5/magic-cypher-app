.page {
  --gray-rgb: 0, 0, 0;
  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);
  /* --dark-background-color: #373744; */

  /* font color */
  /* --primary-color: aquamarine; */

  /* --linear-gradient-main: linear-gradient(315deg, #2b4162 0%, #12100e 74%); */

  /* --button-primary-hover: #383838;
  --button-secondary-hover: #f2f2f2; */
  color: var(--primary-color);

  /* background-image: linear-gradient(153deg, #3a3a96, #0c122e); */
  background-color: var(--dark-background-color);
  background-image: var(--linear-gradient-main);
  min-height: 100svh;
  font-family: var(--font-geist-sans);
}
/* 
:root{
  --startPosition: 200% 0;
  --endPosition: -200% 0;
} */



/* @media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
} */



.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 600;
}



a.primary {
  background: var(--foreground);
  color: var(--background);
  gap: 8px;
}

a.secondary {
  border-color: var(--gray-alpha-200);
  min-width: 180px;
}

.footer {
  grid-row-start: 3;
  display: flex;
  gap: 24px;
}

.footer a {
  display: flex;
  align-items: center;
  gap: 8px;
}

.footer img {
  flex-shrink: 0;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}


@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}

/* fancy title */

.gradient_wrapper {
  display: inline-block;
  position: relative;
  font-size: 40px;
  font-weight: bold;
  background: linear-gradient(45deg, 
    #7fffd4, #00bfff, #ff00ff, #8a2be2, #00ff00);  /* Gradient with multiple hues */
  background-size: 400% 400%;  /* Make the gradient bigger than the text area */
  background-clip: text;  /* Clip background to text */
  color: transparent;  /* Make the text transparent */
  animation: gradient-animation 15s linear infinite;  /* Animate the background */
  animation-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
}

.gradient_wrapper h1{

  font-family: "Cyberpunk";
 
}

/* Define the animation */
@keyframes gradient-animation {
  0% {
    background-position: 0% 0%;
  }
  25% {
    background-position: 100% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  75% {
    background-position: 0% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}


.page .myButton {
  color: var(--primary-color);
  margin: 1rem;
  text-align: center;
  border-radius: 15px;
  width: 115px;
  height: 30px;
  background-color: var(--dark-background);
  border: 1px solid #28393300;
  /* color: #fff; */
  /* background-color: #3A3A3C; */
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.3);
  transition: all 0.2s ease;
}

/* .myButton:hover {
  background-color: var(--primary-color);
  color:var(--secondary-dark-background);
  box-shadow: 0 0 10px var(--primary-color);
} */




.cipher_result_Wraper {
  border-radius: 10px;
  width: 100%;
  min-height: 150px;
  background-color: var(--dark-background-color);
  color: var(--primary-color);
  font-size: 17px;
  font-weight: 300;
  width: 100%;
  padding:10px;

}

.cipher_result_Wraper p {
  line-break: anywhere;
}


/* Sliding Squares Loading Spinner
     Inspired by https://www.uplabs.com/posts/slidin-squares-loader by Vitaly Silkin 
     Implemented in CSS by Tom Adey */

.loadingspinner {
  --square: 26px;
  --offset: 30px;

  --duration: 2.4s;
  --delay: 0.2s;
  --timing-function: ease-in-out;

  --in-duration: 0.4s;
  --in-delay: 0.1s;
  --in-timing-function: ease-out;

  width: calc(3 * var(--offset) + var(--square));
  height: calc(2 * var(--offset) + var(--square));
  padding: 0px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 10px;
  margin-bottom: 30px;
  position: relative;
}

.loadingspinner div {
  display: inline-block;
  background: var(--primary-color);
  /*background: var(--text-color);*/
  /*box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);*/
  border: none;
  border-radius: 2px;
  width: var(--square);
  height: var(--square);
  position: absolute;
  padding: 0px;
  margin: 0px;
  font-size: 6pt;
  color: black;
}



.loadingspinner :global(#square1) {
  left: calc(0 * var(--offset));
  top: calc(0 * var(--offset));

  animation-name: square1;
  animation-duration: var(--duration), var(--in-duration);
  animation-delay: var(--delay), calc(1 * var(--in-delay));
  animation-timing-function: var(--timing-function), var(--in-timing-function);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

.loadingspinner :global(#square2) {
  left: calc(0 * var(--offset));
  top: calc(1 * var(--offset));

  /* Expanded animation properties */
  animation-name: square2;
  animation-duration: var(--duration), var(--in-duration);
  animation-delay: var(--delay), calc(1 * var(--in-delay));
  animation-timing-function: var(--timing-function), var(--in-timing-function);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

.loadingspinner :global(#square3) {
  left: calc(1 * var(--offset));
  top: calc(1 * var(--offset));

  animation-name: square3;
  animation-duration: var(--duration), var(--in-duration);
  animation-delay: var(--delay), calc(2 * var(--in-delay));
  animation-timing-function: var(--timing-function), var(--in-timing-function);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

.loadingspinner :global(#square4) {
  left: calc(2 * var(--offset));
  top: calc(1 * var(--offset));

  animation-name: square4;
  animation-duration: var(--duration), var(--in-duration);
  animation-delay: var(--delay), calc(3 * var(--in-delay));
  animation-timing-function: var(--timing-function), var(--in-timing-function);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

.loadingspinner :global(#square5) {
  left: calc(3 * var(--offset));
  top: calc(1 * var(--offset));

  animation-name: square5;
  animation-duration: var(--duration), var(--in-duration);
  animation-delay: var(--delay), calc(4 * var(--in-delay));
  animation-timing-function: var(--timing-function), var(--in-timing-function);
  animation-iteration-count: infinite;
  animation-fill-mode: both;
}

@keyframes square1 {
  0% {
    left: calc(0 * var(--offset));
    top: calc(0 * var(--offset));
  }

  8.333% {
    left: calc(0 * var(--offset));
    top: calc(1 * var(--offset));
  }

  100% {
    left: calc(0 * var(--offset));
    top: calc(1 * var(--offset));
  }
}


@keyframes square2 {
  0% {
    left: calc(0 * var(--offset));
    top: calc(1 * var(--offset));
  }

  8.333% {
    left: calc(0 * var(--offset));
    top: calc(2 * var(--offset));
  }

  16.67% {
    left: calc(1 * var(--offset));
    top: calc(2 * var(--offset));
  }

  25.00% {
    left: calc(1 * var(--offset));
    top: calc(1 * var(--offset));
  }

  83.33% {
    left: calc(1 * var(--offset));
    top: calc(1 * var(--offset));
  }

  91.67% {
    left: calc(1 * var(--offset));
    top: calc(0 * var(--offset));
  }

  100% {
    left: calc(0 * var(--offset));
    top: calc(0 * var(--offset));
  }
}

@keyframes square3 {

  0%,
  100% {
    left: calc(1 * var(--offset));
    top: calc(1 * var(--offset));
  }

  16.67% {
    left: calc(1 * var(--offset));
    top: calc(1 * var(--offset));
  }

  25.00% {
    left: calc(1 * var(--offset));
    top: calc(0 * var(--offset));
  }

  33.33% {
    left: calc(2 * var(--offset));
    top: calc(0 * var(--offset));
  }

  41.67% {
    left: calc(2 * var(--offset));
    top: calc(1 * var(--offset));
  }

  66.67% {
    left: calc(2 * var(--offset));
    top: calc(1 * var(--offset));
  }

  75.00% {
    left: calc(2 * var(--offset));
    top: calc(2 * var(--offset));
  }

  83.33% {
    left: calc(1 * var(--offset));
    top: calc(2 * var(--offset));
  }

  91.67% {
    left: calc(1 * var(--offset));
    top: calc(1 * var(--offset));
  }
}

@keyframes square4 {
  0% {
    left: calc(2 * var(--offset));
    top: calc(1 * var(--offset));
  }

  33.33% {
    left: calc(2 * var(--offset));
    top: calc(1 * var(--offset));
  }

  41.67% {
    left: calc(2 * var(--offset));
    top: calc(2 * var(--offset));
  }

  50.00% {
    left: calc(3 * var(--offset));
    top: calc(2 * var(--offset));
  }

  58.33% {
    left: calc(3 * var(--offset));
    top: calc(1 * var(--offset));
  }

  100% {
    left: calc(3 * var(--offset));
    top: calc(1 * var(--offset));
  }
}

@keyframes square5 {
  0% {
    left: calc(3 * var(--offset));
    top: calc(1 * var(--offset));
  }

  50.00% {
    left: calc(3 * var(--offset));
    top: calc(1 * var(--offset));
  }

  58.33% {
    left: calc(3 * var(--offset));
    top: calc(0 * var(--offset));
  }

  66.67% {
    left: calc(2 * var(--offset));
    top: calc(0 * var(--offset));
  }

  75.00% {
    left: calc(2 * var(--offset));
    top: calc(1 * var(--offset));
  }

  100% {
    left: calc(2 * var(--offset));
    top: calc(1 * var(--offset));
  }
}

@keyframes squarefadein {
  0% {
    transform: scale(0.75);
    opacity: 0.0;
  }

  100% {
    transform: scale(1.0);
    opacity: 1.0;
  }
}

@keyframes moveRight {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(100px);
  }
}

/* Skeleton loader for paragraph */
.skeleton_loader {
  width: 100%;
  height: 17px; /* Adjust height based on text */
  border-radius: 8px; /* Rounded corners */

  /* more subdued synthwave with a pastel feel */
  background: linear-gradient(90deg, #8aede096 25%, #f06af099 50%, #b25ae67d 75%, #8aede096 100%);

  background-size: 200% 100%; /* Stretch gradient for animation */

  animation: loading 1.5s infinite ease-in-out; /* Infinite animation */
  background-repeat: repeat-x;
  margin-top: 15px;
}

/* Animation to simulate the loading effect */
@keyframes loading {
  /* default to 200% 0 t0 -200% 0 */
  0% {
    background-position: var(--startPosition);
  }
  100% {
    background-position: var(--endPosition);
  }
}

